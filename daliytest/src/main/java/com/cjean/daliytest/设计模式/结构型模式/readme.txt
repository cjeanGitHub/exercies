结构型模式  
	核心作用：
		- 从程序上实现松耦合，从而可以扩大整体的类结构，用来解决更大的问题
			软件开发过程中会有不断的升级以及更改，此时会对项目结构进行很大的调整，如果项目
			采用合适的结构型开发模式，会对这种情况下有很大的作用。
	分类：
		- 适配器模式、代理模式、桥接模式、
		装饰模式、组合模式、外观模式、享元模式
	
	开源框架以及产品中有很多使用
	
	工作场景：
		- 经常依赖做旧系统的改造和升级
		- 如果系统开发之后不要再维护，那么很多的模式都是没必要的，但是不幸的是，
			事实却是维护一个系统的代价往往是开发一个系统的数倍。
	学习过的常见场景：
		- InputStreamReader(InputStream);
		- OutputStreamReader(OutputStream);
		
大家都知道23中设计模式，其中又可以分成三类，创建型模式，结构型模式，行为型模式。但是总是在实际应用中忘记了，
当具体看到一些代码的时候也想不起来具体对应的是哪种设计模式，对经常重构的代码人员来说是一个瑕疵。

这里我教你三句话巧记23中设计模式，觉得编的好的话点个赞吧 。

1，创建型模式有五种：工厂方法模式 抽象工厂模式 单例模式 建造者模式 原型模式
	---口诀：原来的建设工人单独抽奖

解释：原(原型模式)来的建(建造者模式)设工(工厂方法模式)人单(单例模式)独抽(抽象方法模式)奖。

2，结构型模式有其中：适配器模式、装饰器模式、代理模式、外观模式、桥接模式、组合模式、享元模式
		---口诀：带上适当的装备组合可以让外国侨胞享受（游戏）

解释：带(代理模式)上适(适配器模式)当的装(装饰模式)备组(组合模式)合可以让外(外观模式)国侨(桥接模式)胞享(享元模式)受（游戏）

3，行为型模式有十一种：策略模式、模板方法模式、观察者模式、迭代子模式、责任链模式、命令模式、备忘录模式、
状态模式、访问者模式、中介者模式、解释器模式
	---口诀：多次命令和责备中，车模见状慌忙解开（衣服）

解释：多次(迭：多次的意思，迭代模式)命(命令模式)令和责(责任链模式)备(备忘录模式)中(中介者模式)，车(策略模式)

模(模板方法模式)见(观察着模式)状(状态模式)慌(访问者模式)解(解释器模式)开（衣服）。

所以只要三句话，当你的脑海中经常有这三句话的时候，23中设计模式就过目不忘了，接下来的就是去实践了吧。
		